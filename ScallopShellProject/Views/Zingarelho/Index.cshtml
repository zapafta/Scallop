@{
    ViewData["Title"] = "Shop";
}

@model ScallopShellProject.Models.ZingarelhoViewModel


<div class="form-control" style="display:inline-block">
    <div class="row">
        <form class="form-control" method="post" id="articleForm">
            <h1> ÁREA DO ARTIGO</h1>
            <p id="error" class="alert-danger">
            </p>

            <p id="sucesso" style="font-size:larger" class="alert-success">
            </p>


            <p id="ArtigoEditado" class="alert-success">
            </p>

            Descricao:
            <input class="col-1" required name="Article.Descricao" id="Descricao" type="text">

            DescricaoLONGA:
            <textarea name="Article.DescricaoLonga" id="DescricaoLonga" cols="40" rows="5"></textarea>

            PrecoUnit:
            <input class="col-1" required name="Article.PrecoUnit" pattern="\d*([.,\/]?\d+)" id="PrecoUnit" type="text">
            Qtd:
            <input class="col-1" required name="Article.Qtd" id="Qtd" type="number">






            <br />
            <select id="selectArt" name="Article.IdCategory" class="form-control form-control-lg">
                @foreach (var item in Model.ListAllCategories)
                {
                    <option value="@item.Id">@item.Descricao</option>
                }



            </select>
            <br />
            <br />

            <div class="col-3">
                <div class="custom-control custom-radio">

                    <input type="radio" class="custom-control-input text" id="active" name="Article.active" value="1">
                    <label class="custom-control-label" for="active">Active</label>
                </div>
            </div>
            <div class="col-3">

                <div class="custom-control custom-radio">

                    <input type="radio" class="custom-control-input" id="inactive" name="Article.active" value="0">
                    <label class="custom-control-label" for="inactive">Inactive</label>

                </div>
            </div>

            <br />
            <br />
            <br />
            <input type="file" id="files" name="files" multiple />

            <br />

            <input type="hidden" id="base64" name="ListImage" />
            <div id="theDiv"></div>



            <input type="submit" onclick="saveArticle()">



        </form>
    </div>
    <br />
    <br />

    <div style="margin-left:250px">

        <div class="row">
            <table width="100%" id="example" class="table-bordered embed-responsive-item">
                <thead>
                    <tr>


                        <th>Descricao</th>
                        <th>PrecoUnit</th>
                        <th>Qtd</th>
                        <th>Active</th>
                        <th>Imagem</th>
                        <th>-</th>
                    </tr>
                </thead>
                <tbody>

              

                    @foreach (var item in Model.ListAllArticles)
                    {
                    <tr>
                        @{
                            var base64 = Convert.ToBase64String(item.ImageList[0].ImageByte);
                            var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                        }
                        <td style="text-align:right">@item.Descricao</td>
                        <td style="text-align:right">@item.PrecoUnit.ToString("0.##")</td>
                        <td style="text-align:right">@item.Qtd</td>
                        <td style="text-align:right">@item.Active</td>
                        <td style="text-align:right">
                            <img id="item" height="35" width="35" src="@imgSrc" />

                        </td>
                        <td style="text-align:right">
                            <button type="button" onclick="EditArticle('@item.Id')">Edit</button>
                        </td>

                    </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>



<script>

    $(document).ready(function () {



    if (window.File && window.FileReader && window.FileList && window.Blob) {
            document.getElementById('files').addEventListener('change', handleFileSelect, false);
        } else {
            alert('The File APIs are not fully supported in this browser.');
        }



        $('#example').DataTable();


    });



    function saveArticle() {

        var datah = $("#articleForm").serialize();
        debugger
        $.ajax({
            type: 'POST',
            url: '/Zingarelho/SaveArticle',
            data: datah,
            success: function (dados) {
                

                if (dados == "1") {
                    $("#sucesso").text('Criado com Sucesso');
                } else {
                    $("#error").text(dados);
                }

            },
            error: function (dados) {
                debugger


                if (dados == "1") {
                    $("#sucesso").text('Criado com Sucesso');
                } else {
                    $("#error").text(dados);
                }
            }

        });
    }


    function handleFileSelect(evt) {


        debugger
        var f = evt.target.files[0]; 

                for (i = 0; i < evt.target.files.length; i++) {
                    var f = evt.target.files[i]
                            var reader = new FileReader();
        // Closure to capture the file information.
        reader.onload = (function (theFile) {
            return function (e) {
                var binaryData = e.target.result;
                //Converting Binary Data to base 64
                var base64String = window.btoa(binaryData);
                if (document.getElementById('base64').value) {

                    document.getElementById('base64').value = document.getElementById('base64').value + "€" + base64String;
                } else {
                    document.getElementById('base64').value = document.getElementById('base64').value + "€" + base64String;

                }


                //showing file converted to base64
       
            };
        })(f);
        // Read in the image file as a data URL.
        reader.readAsBinaryString(f);


}

        // FileList object

    }

    function EditArticle(id) {





        $.ajax({
            type: 'GET',
            url: '/Zingarelho/EditArticle',
            data: {
                'id': id

            },
            success: function (dados) {

                debugger
               
                $("#Descricao").val(dados.article.descricao);
                $("#PrecoUnit").val(dados.article.precoUnit);
                $("#DescricaoLonga").val(dados.article.descricaoLonga);
                $("#Qtd").val(dados.article.qtd);


                if (dados.article.active == true) {

                    $('#active').prop('checked', true);
                    $('#inactive').prop('checked', false);
                } else {

                    $('#inactive').prop('checked', true);
                    $('#active').prop('checked', false);
                }

               


                for (i = 0; i < dados.article.imageList.length; i++) {

                    dados.article.imageList[i]

                     $('#theDiv').prepend('<img id="theImg'+i+'" width="100px" height="100px" src="data:image/png;base64,' + dados.article.imageList[i].imageByte + '" />')
}

                

                //document.getElementById("ItemPreview").src = "data:image/png;base64," + dados.Article.Image.ImageByte;


                    $('#selectArt').val(dados.article.category.id)


                $('#selectArt').niceSelect('update');



            }
            ,
            error: function (xhr, status, error) {
                debugger
                xhr.responseText;

            }
            
        });
    }





</script>
